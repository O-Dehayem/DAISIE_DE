// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_solve
Rcpp::List cpp_solve(const double& lambda_c, const double& lambda_a, const double& mu, const double& gamma, const std::string& chosen_interval, const std::string& inte_method, const Rcpp::NumericVector& init_states, const Rcpp::NumericVector& time, double atol, double rtol);
RcppExport SEXP _DAISIEde_cpp_solve(SEXP lambda_cSEXP, SEXP lambda_aSEXP, SEXP muSEXP, SEXP gammaSEXP, SEXP chosen_intervalSEXP, SEXP inte_methodSEXP, SEXP init_statesSEXP, SEXP timeSEXP, SEXP atolSEXP, SEXP rtolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type lambda_c(lambda_cSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_a(lambda_aSEXP);
    Rcpp::traits::input_parameter< const double& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double& >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type chosen_interval(chosen_intervalSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type inte_method(inte_methodSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type init_states(init_statesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type atol(atolSEXP);
    Rcpp::traits::input_parameter< double >::type rtol(rtolSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_solve(lambda_c, lambda_a, mu, gamma, chosen_interval, inte_method, init_states, time, atol, rtol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DAISIEde_cpp_solve", (DL_FUNC) &_DAISIEde_cpp_solve, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_DAISIEde(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
